<?php
/**
 * Created by PhpStorm.
 * User: alvin
 * Date: 02/01/2018
 * Time: 6:20 PM
 */

namespace Althea\Freeshippinglabel\Block;

use Aheadworks\Freeshippinglabel\Api\LabelRepositoryInterface;
use Aheadworks\Freeshippinglabel\Model\ResourceModel\Label\CollectionFactory;
use Magento\Customer\Model\Session;
use Magento\Framework\Registry;
use Magento\Framework\View\Element\Template\Context;

class Label extends \Aheadworks\Freeshippinglabel\Block\Label {

	protected $_labelModel;
	protected $_registry;
	protected $_labelRepository;
	protected $_collectionFactory;

	/**
	 * @inheritDoc
	 */
	public function __construct(
		CollectionFactory $collectionFactory,
		Registry $registry,
		LabelRepositoryInterface $labelRepository,
		Session $customerSession,
		Context $context,
		array $data = []
	)
	{
		$this->_collectionFactory = $collectionFactory;
		$this->_registry          = $registry;
		$this->_labelRepository   = $labelRepository;

		parent::__construct($registry, $labelRepository, $customerSession, $context, $data);
	}

	/**
	 * @inheritDoc
	 */
	public function isLabelEnabled()
	{
		if (!$this->getLabelModel()) {

			return false;
		}

		return parent::isLabelEnabled(); // TODO: Change the autogenerated stub
	}

	/**
	 * @inheritDoc
	 */
	public function getLabelModel()
	{
		if (!$this->_labelModel) {

			if (!$label = $this->_registry->registry('aw_fslabel_label')) {

				$collection = $this->_collectionFactory->create();

				$collection->getSelect()
				           ->join(
					           ['label_store' => 'aw_fslabel_label_content'],
					           'main_table.id = label_store.label_id',
					           []
				           )->group('main_table.id');

				$collection->addFieldToFilter('label_store.store_id', ['eq' => $this->_storeManager->getStore()->getId()]);

				$label = $collection->getFirstItem();

				if ($label->getId()) {

					$this->_registry->register('aw_fslabel_label', $label);
				}

				return false;
			}

			$this->_labelModel = $label;
		}

		return $this->_labelModel;
	}

}